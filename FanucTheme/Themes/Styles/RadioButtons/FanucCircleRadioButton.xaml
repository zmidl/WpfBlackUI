<ResourceDictionary 
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:cv="clr-namespace:FanucTheme.Converters"
  xmlns:o="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options"
  xmlns:rb="clr-namespace:FanucTheme.Controls.RadioButtons">
  <cv:ConvertIsCheckedToBrush x:Key="ConvertIsCheckedToBrush"/>
  <cv:ConvertOptionMarkPlaceToDock x:Key="ConvertOptionMarkPlaceToDock"/>
  
  <Style TargetType="{x:Type RadioButton}">
    <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
    <Setter Property="Height" Value="30"/>
    <Setter Property="VerticalContentAlignment" Value="Center"/>
    <Setter Property="BorderBrush" Value="DimGray"/>
    <Setter Property="Foreground" Value="{DynamicResource RadioButtonForeground}"/>
    <Setter Property="BorderThickness" Value="1"/>
    <Setter Property="FontSize" Value="17"/>
    <Setter Property="rb:FanucRadioButton.OptionMarkColor" Value="{DynamicResource RadioButtonForeground}"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type RadioButton}">
          <DockPanel LastChildFill="True" SnapsToDevicePixels="True">
            <Border x:Name="Border1" Width="{TemplateBinding Height}" DockPanel.Dock="{TemplateBinding rb:FanucRadioButton.OptionMarkPlace,Converter={StaticResource ConvertOptionMarkPlaceToDock}}">
              <Border.Background>
                <DrawingBrush>
                  <DrawingBrush.Drawing>
                    <DrawingGroup>
                      <GeometryDrawing Brush="{StaticResource RadioButtonBorderBrush}">
                        <GeometryDrawing.Geometry>
                          <EllipseGeometry RadiusX="100" RadiusY="100"/>
                        </GeometryDrawing.Geometry>
                      </GeometryDrawing>
                      <GeometryDrawing Brush="{DynamicResource RadioButtonBackgroundBrush}">
                        <GeometryDrawing.Geometry>
                          <EllipseGeometry RadiusX="90" RadiusY="90"/>
                        </GeometryDrawing.Geometry>
                      </GeometryDrawing>
                      <GeometryDrawing >
                        <GeometryDrawing.Brush>
                          <RadialGradientBrush o:Freeze="True" RadiusY="0.735" RadiusX="0.735" GradientOrigin="1.142,1.013">
                            <GradientStop o:Freeze="True" Color="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=IsChecked,Converter={StaticResource ConvertIsCheckedToBrush}}" Offset="0.782"/>
                            <GradientStop o:Freeze="True" Color="White" Offset="0.858"/>
                          </RadialGradientBrush>
                        </GeometryDrawing.Brush>
                        <GeometryDrawing.Geometry>
                          <EllipseGeometry RadiusX="50" RadiusY="50"/>
                        </GeometryDrawing.Geometry>
                      </GeometryDrawing>
                      <GeometryDrawing >
                        <GeometryDrawing.Brush>
                          <RadialGradientBrush o:Freeze="True" RadiusY="0.735" RadiusX="0.735" GradientOrigin="-0.073,-0.053">
                            <GradientStop o:Freeze="True" Color="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=IsChecked,Converter={StaticResource ConvertIsCheckedToBrush}}" Offset="0.788"/>
                            <GradientStop o:Freeze="True" Color="#FF0F0F0F" Offset="0.888"/>
                            <GradientStop Color="#001D1D1D"/>
                          </RadialGradientBrush>
                        </GeometryDrawing.Brush>
                        <GeometryDrawing.Geometry>
                          <EllipseGeometry RadiusX="50" RadiusY="50"/>
                        </GeometryDrawing.Geometry>
                      </GeometryDrawing>
                    </DrawingGroup>
                  </DrawingBrush.Drawing>
                </DrawingBrush>
              </Border.Background>
            </Border>
            <ContentPresenter TextBlock.Foreground="{TemplateBinding Foreground}" TextBlock.FontSize="{TemplateBinding FontSize}" Grid.Column="1"  Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
          </DockPanel>


          <!--<Grid x:Name="templateRoot" SnapsToDevicePixels="True">
            <Grid.ColumnDefinitions>
              <ColumnDefinition />
              <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <Border x:Name="radioButtonBorder"  Width="{TemplateBinding Height}" >
              <Border.Background>
                <DrawingBrush>
                  <DrawingBrush.Drawing>
                    <DrawingGroup>
                      <GeometryDrawing Brush="{StaticResource RadioButtonBorderBrush}">
                        <GeometryDrawing.Geometry>
                          <EllipseGeometry RadiusX="100" RadiusY="100"/>
                        </GeometryDrawing.Geometry>
                      </GeometryDrawing>
                      <GeometryDrawing Brush="{DynamicResource RadioButtonBackgroundBrush}">
                        <GeometryDrawing.Geometry>
                          <EllipseGeometry RadiusX="90" RadiusY="90"/>
                        </GeometryDrawing.Geometry>
                      </GeometryDrawing>
                      <GeometryDrawing >
                          <GeometryDrawing.Brush>
                            <RadialGradientBrush o:Freeze="True" RadiusY="0.735" RadiusX="0.735" GradientOrigin="1.142,1.013">
                              <GradientStop o:Freeze="True" Color="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=IsChecked,Converter={StaticResource ConvertIsCheckedToBrush}}" Offset="0.782"/>
                              <GradientStop o:Freeze="True" Color="White" Offset="0.858"/>
                            </RadialGradientBrush>
                          </GeometryDrawing.Brush>
                        <GeometryDrawing.Geometry>
                          <EllipseGeometry RadiusX="50" RadiusY="50"/>
                        </GeometryDrawing.Geometry>
                      </GeometryDrawing>
                      <GeometryDrawing >
                        <GeometryDrawing.Brush>
                          <RadialGradientBrush o:Freeze="True" RadiusY="0.735" RadiusX="0.735" GradientOrigin="-0.073,-0.053">
                            <GradientStop o:Freeze="True" Color="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=IsChecked,Converter={StaticResource ConvertIsCheckedToBrush}}" Offset="0.788"/>
                            <GradientStop o:Freeze="True" Color="#FF0F0F0F" Offset="0.888"/>
                            <GradientStop Color="#001D1D1D"/>
                          </RadialGradientBrush>
                        </GeometryDrawing.Brush>
                        <GeometryDrawing.Geometry>
                          <EllipseGeometry RadiusX="50" RadiusY="50"/>
                        </GeometryDrawing.Geometry>
                      </GeometryDrawing>
                    </DrawingGroup>
                  </DrawingBrush.Drawing>
                </DrawingBrush>
              </Border.Background>
            </Border>
            <ContentPresenter x:Name="contentPresenter" TextBlock.Foreground="{TemplateBinding Foreground}" TextBlock.FontSize="{TemplateBinding FontSize}" Grid.Column="1"  Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
          </Grid>-->
          <ControlTemplate.Triggers>
            <Trigger Property="HasContent" Value="true">
              <Setter Property="Padding" Value="4,-1,0,0"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="true">
              <Setter TargetName="Border1" Property="Opacity" Value="{StaticResource MouseOver}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
              <Setter TargetName="Border1" Property="Opacity" Value="{StaticResource Disable}"/>
            </Trigger>

          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

</ResourceDictionary>